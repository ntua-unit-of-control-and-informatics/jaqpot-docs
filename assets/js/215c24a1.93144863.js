"use strict";(self.webpackChunkeuclia_docs=self.webpackChunkeuclia_docs||[]).push([[325],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>g});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(a),m=o,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||r;return a?n.createElement(g,i(i({ref:t},s),{},{components:a})):n.createElement(g,i({ref:t},s))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7844:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=a(7462),o=(a(7294),a(3905));const r={id:"python",title:"Python Client",sidebar_label:"Python"},i=void 0,l={unversionedId:"python",id:"python",title:"Python Client",description:"Integrate with Jaqpot API through Python applications",source:"@site/docs/python.md",sourceDirName:".",slug:"/python",permalink:"/docs/python",draft:!1,tags:[],version:"current",frontMatter:{id:"python",title:"Python Client",sidebar_label:"Python"},sidebar:"someSidebar",previous:{title:"JAVA",permalink:"/docs/JAVA"},next:{title:"Javascript",permalink:"/docs/javascript"}},p={},d=[{value:"Integrate with Jaqpot API through Python applications",id:"integrate-with-jaqpot-api-through-python-applications",level:2},{value:"Installation",id:"installation",level:2},{value:"Create a Client instance",id:"create-a-client-instance",level:2},{value:"Set your credientials.",id:"set-your-credientials",level:3},{value:"Create predictions for your models",id:"create-predictions-for-your-models",level:2},{value:"Predict Method",id:"predict-method",level:3},{value:"Available functions",id:"available-functions",level:2},{value:"Get your models paginated",id:"get-your-models-paginated",level:3},{value:"Get a model",id:"get-a-model",level:3},{value:"Get an organization&#39;s models paginated",id:"get-an-organizations-models-paginated",level:3},{value:"Get models with a particular tag paginated",id:"get-models-with-a-particular-tag-paginated",level:3},{value:"Get an organization&#39;s models with a particular tag paginated",id:"get-an-organizations-models-with-a-particular-tag-paginated",level:3},{value:"Get a dataset",id:"get-a-dataset",level:3},{value:"Upload a Dataset",id:"upload-a-dataset",level:3}],s={toc:d},u="wrapper";function c(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"integrate-with-jaqpot-api-through-python-applications"},"Integrate with Jaqpot API through Python applications"),(0,o.kt)("p",null,"The Python Jaqpot client has been developed in order to post, pull and use both models and datasets, stored in the Jaqpot API with ease. "),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Install the python client through pypi:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"pip install jaqpotpy \n")),(0,o.kt)("h2",{id:"create-a-client-instance"},"Create a Client instance"),(0,o.kt)("p",null,"Initialize a new Jaqpot client object.\nFind more on finding your authentication token ",(0,o.kt)("a",{parentName:"p",href:"https:#link-to-token.gr"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from jaqpotpy import Jaqpot\n\n# Instanciate the Jaqpot Client \njaqpot = Jaqpot()\n")),(0,o.kt)("h3",{id:"set-your-credientials"},"Set your credientials."),(0,o.kt)("p",null,"Using API key (for users with Google account):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Set your authorization token. \n# You can get it from your Jaqpot Dashboard by clicking 'Get Key'.\n\ntoken = 'myAuthToken'\njaqpot.set_api_key(token)  \n")),(0,o.kt)("p",null,"Using credentials (for users that have registered):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"\nusername = 'username'\npwd = 'password'\n\njaqpot.login(username, pwd)  \n")),(0,o.kt)("h2",{id:"create-predictions-for-your-models"},"Create predictions for your models"),(0,o.kt)("h3",{id:"predict-method"},"Predict Method"),(0,o.kt)("p",null,"Use the predict method to make predictions.\nFind more on selecting the appropriate IDs ",(0,o.kt)("a",{parentName:"p",href:"https:#link-to-ids.gr"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\n\n# Set the model's ID.\nmodelId = 'myModelId'\n\n# Construct the input data.\n# In this example we fill two rows of the prediction dataset.\n\nd = {'Feature_A': [0.2, 0.6], 'Feature_B': [0.1, 0.9], 'Feature_C':[0.3, 0.1]}\ndf = pd.DataFrame(data=d)\n\n# Make a prediction.\npredictions = jaqpot.predict(df, modelId)\n")),(0,o.kt)("h2",{id:"available-functions"},"Available functions"),(0,o.kt)("h3",{id:"get-your-models-paginated"},"Get your models paginated"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"get_my_models")," method to get your models paginated:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"jaqpot.get_my_models(minimum=1,maximum=10)\n")),(0,o.kt)("h3",{id:"get-a-model"},"Get a model"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"get_model_by_id")," method to get a model by its ID.\nFind more on selecting the appropriate IDs ",(0,o.kt)("a",{parentName:"p",href:"https:#link-to-ids.gr"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'model = jaqpot.get_model_by_id("model_id")\n')),(0,o.kt)("h3",{id:"get-an-organizations-models-paginated"},"Get an organization's models paginated"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"get_orgs_models")," method to get an organization's models paginated:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'jaqpot.get_orgs_models("org_id", 0, 10)\n')),(0,o.kt)("h3",{id:"get-models-with-a-particular-tag-paginated"},"Get models with a particular tag paginated"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"get_models_by_tag")," method to get your models with a particular tag paginated:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'jaqpot.get_models_by_tag("my_tag", 0, 10);\n')),(0,o.kt)("h3",{id:"get-an-organizations-models-with-a-particular-tag-paginated"},"Get an organization's models with a particular tag paginated"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"get_models_by_tag_and_org")," method to get an organization's models with a particular tag paginated:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'jaqpot.get_models_by_tag("org_id", "my_tag", 0, 10)\n')),(0,o.kt)("h3",{id:"get-a-dataset"},"Get a dataset"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"get_dataset")," method to get a Jaqpot dataset by its' ID:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'jaqpot.get_dataset("datset_id")\n')),(0,o.kt)("h3",{id:"upload-a-dataset"},"Upload a Dataset"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"upload_dataset")," method to post Jaqpot dataset:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\n\n# Construct the input data.\nd = {'Feature_A': [0.2, 0.6], 'Feature_B': [0.1, 0.9], 'Feature_C':[0.3, 0.1]}\ndf = pd.DataFrame(data=d)\n\njaqpot.upload_dataset(df, 'model_id', 'My Title', 'This is a description')\n")))}c.isMDXComponent=!0}}]);